name: Pylint
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        if [ -f flask-server/requirements.txt ]; then pip install -r flask-server/requirements.txt; fi
        
    - name: Analysing the code with pylint
      id: pylint
      run: |
        # List all Python files
        all_python_files=$(git ls-files '*.py')

        # Filter out test files
        filtered_files=$(echo "$all_python_files" | grep -v -e 'test_.*\.py')

        if [[ -z "$filtered_files" ]]; then
          echo "No Python files to lint."
        else
          pylint_result=$(pylint $filtered_files 2>&1)
          pylint_exit_code=$?

          echo "Pylint result: $pylint_result"
          echo "Pylint exit code: $pylint_exit_code"

          # Check if there are fatal (1), error (2), or usage error (32) messages
          if [ $((pylint_exit_code & (1 | 2 | 32))) -ne 0 ]; then
            echo "Pylint found fatal, error, or usage errors. Exiting with code $pylint_exit_code."
            echo "Pylint output:"
            echo "$pylint_result"
            exit $pylint_exit_code
          else
            echo "Pylint passed successfully."
          fi
        fi
